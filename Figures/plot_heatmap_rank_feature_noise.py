import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

plt.rcParams['font.family'] = 'Times New Roman'

# 手动定义每个模型在不同噪声率下的准确率
accuracies = {
    ##echocardiogram
    "Dataset 1": {
        "GBkNN":     [0.9333 	,
0.9167 	,
0.9000 	,
0.8833 	,
0.9000 	,
0.9167 	,
0.9167 	,
0.9167 	, ],
        "ACC-GBkNN": [ 0.8833 	,
0.9167 	,
0.8833 	,
0.9000 	,
0.9167 	,
0.9167 	,
0.8667 	,
0.9333 	],
        "ADP-GBkNN": [ 0.9000 	,
0.8833 	,
0.8833 	,
0.8667 	,
0.9500 	,
0.9000 	,
0.8833 	,
0.9000 	, ],
        "GBkNN++"  : [ 0.9167 	,
0.9500 	,
0.9333 	,
0.9667 	,
0.9500 	,
0.9500 	,
0.9167 	,
0.9333 	,],
        "SGBkNN":    [ 0.9500 	,
0.9333 	,
0.9333 	,
0.9333 	,
0.9667 	,
0.9500 	,
0.9000 	,
0.9333 	, ]
    },
    ## Iris
    "Dataset 2": {
        "GBkNN":     [0.8724 	,
0.8933 	,
0.8795 	,
0.8586 	,
0.8462 	,
0.8929 	,
0.8524 	,
0.8448 	,],
        "ACC-GBkNN": [ 0.9329 	,
0.9600 	,
0.9467 	,
0.9595 	,
0.9462 	,
0.9533 	,
0.9395 	,
0.9400 	, ],
        "ADP-GBkNN": [ 0.9467 	,
0.9600 	,
0.9400 	,
0.9524 	,
0.9529 	,
0.9533 	,
0.9600 	,
0.9533 	, ],
        "GBkNN++"  : [ 0.9462 	,
0.9533 	,
0.9462 	,
0.9252 	,
0.9529 	,
0.9333 	,
0.9329 	,
0.9533 	, ],
        "SGBkNN":    [ 0.9533 	,
0.9667 	,
0.9533 	,
0.9524 	,
0.9662 	,
0.9533 	,
0.9529 	,
0.9600 	, ]
    },
    ## parkinsons
    "Dataset 3": {
        "GBkNN":     [0.8461 	,
0.8455 	,
0.8521 	,
0.8668 	,
0.8513 	,
0.8608 	,
0.8455 	,
0.8613 	, ],
        "ACC-GBkNN": [0.8358 	,
0.8292 	,
0.8213 	,
0.8311 	,
0.8458 	,
0.8511 	,
0.8311 	,
0.8100 	,  ],
        "ADP-GBkNN": [ 0.8250 	,
0.7995 	,
0.8213 	,
0.8521 	,
0.8155 	,
0.8308 	,
0.8508 	,
0.8308 	,  ],
        "GBkNN++"  : [ 0.8550 	,
0.8205 	,
0.8216 	,
0.8621 	,
0.8563 	,
0.8461 	,
0.7895 	,
0.8763 	,],
        "SGBkNN":    [ 0.8505 	,
0.8458 	,
0.8416 	,
0.8468 	,
0.8463 	,
0.8408 	,
0.8561 	,
0.8447 	, ]
    },
    ## seeds
    "Dataset 4": {
        "GBkNN":     [ 0.7524 	,
0.7238 	,
0.7238 	,
0.6810 	,
0.7095 	,
0.7381 	,
0.6905 	,
0.7238 	, ],
        "ACC-GBkNN": [ 0.8714 	,
0.8905 	,
0.8714 	,
0.8905 	,
0.8857 	,
0.8762 	,
0.8857 	,
0.8762 	, ],
        "ADP-GBkNN": [0.9095 	,
0.9286 	,
0.8857 	,
0.8905 	,
0.8857 	,
0.9095 	,
0.9190 	,
0.9048 	, ],
        "GBkNN++"  : [0.8952 	,
0.8714 	,
0.8905 	,
0.8667 	,
0.8952 	,
0.8952 	,
0.8952 	,
0.8762 	, ],
        "SGBkNN":    [ 0.9238 	,
0.9048 	,
0.9048 	,
0.9095 	,
0.9143 	,
0.9048 	,
0.9095 	,
0.9286 	,]
    },
    ## Glass
#     "Dataset 5": {
#         "GBkNN":     [0.4335, 0.3952 	,
# 0.4097 	,
# 0.4457 	,
# 0.4232 	,
# 0.4426 	,
# 0.4229 	,
# 0.4558 	,
# 0.3948 	, ],
#         "ACC-GBkNN": [0.6948, 0.6725 	,
# 0.7221 	,
# 0.7089 	,
# 0.6667 	,
# 0.7080 	,
# 0.7184 	,
# 0.6766 	,
# 0.7000 	,],
#         "ADP-GBkNN": [0.7327, 0.6812 	,
# 0.6896 	,
# 0.6944 	,
# 0.7004 	,
# 0.7134 	,
# 0.6907 	,
# 0.6961 	,
# 0.7050 	,],
#         "GBkNN++"  : [0.6799, 0.6530 	,
# 0.6240 	,
# 0.6944 	,
# 0.6613 	,
# 0.6946 	,
# 0.6338 	,
# 0.6346 	,
# 0.6621 	, ],
#         "SGBkNN":    [0.7087, 0.6576 	,
# 0.6426 	,
# 0.6435 	,
# 0.6751 	,
# 0.6567 	,
# 0.6712 	,
# 0.6346 	,
# 0.6485 	, ]
#     },
#
   ## Glass
    "Dataset 5": {
        "GBkNN":     [0.4009 	,
0.3978 	,
0.4234 	,
0.3851 	,
0.4065 	,
0.3431 	,
0.4190 	,
0.4048 	, ],
        "ACC-GBkNN": [ 0.7052 	,
0.6617 	,
0.6885 	,
0.7043 	,
0.6569 	,
0.6920 	,
0.6714 	,
0.6864 	,],
        "ADP-GBkNN": [ 0.7374 	,
0.7277 	,
0.6987 	,
0.7370 	,
0.7136 	,
0.7238 	,
0.7372 	,
0.7288 	,],
        "GBkNN++"  : [ 0.6199 	,
0.6671 	,
0.6578 	,
0.6903 	,
0.6955 	,
0.6530 	,
0.6286 	,
0.6857 	, ],
        "SGBkNN":    [0.7041 	,
0.6848 	,
0.6894 	,
0.6580 	,
0.6615 	,
0.6491 	,
0.6524 	,
0.6565 	, ]
    },
## audiology
    "Dataset 6": {
        "GBkNN":     [ 0.8668 	,
0.8768 	,
0.8305 	,
0.8771 	,
0.8518 	,
0.8821 	,
0.8568 	,
0.8513 	,  ],
        "ACC-GBkNN": [ 0.8158 	,
0.8308 	,
0.8566 	,
0.8616 	,
0.8521 	,
0.8424 	,
0.8621 	,
0.8358 	,  ],
        "ADP-GBkNN": [ 0.8668 	,
0.8768 	,
0.8305 	,
0.8771 	,
0.8518 	,
0.8821 	,
0.8568 	,
0.8513 	,  ],
        "GBkNN++"  : [ 0.8361 	,
0.8311 	,
0.8313 	,
0.8368 	,
0.8371 	,
0.8461 	,
0.8363 	,
0.8303 	,],
        "SGBkNN":    [ 0.892631579,
0.893157895,
0.867368421,
0.887894737,
0.887368421,
0.882894737,
0.877894737,
0.898684211  ]
    },
    ## ecoli
    "Dataset 7": {
        "GBkNN":     [ 0.5687 	,
0.5061 	,
0.5894 	,
0.5865 	,
0.5595 	,
0.4933 	,
0.6020 	,
0.4731 	,  ],
        "ACC-GBkNN": [ 0.8601 	,
0.8303 	,
0.8302 	,
0.8365 	,
0.8304 	,
0.8332 	,
0.8305 	,
0.8422 	,  ],
        "ADP-GBkNN": [ 0.5687 	,
0.5061 	,
0.5894 	,
0.5865 	,
0.5595 	,
0.4933 	,
0.6020 	,
0.4731 	, ],
        "GBkNN++"  : [ 0.8273 	,
0.8602 	,
0.8453 	,
0.8363 	,
0.8481 	,
0.8279 	,
0.8484 	,
0.8603 	,],
        "SGBkNN":    [ 0.8542 	,
0.8485 	,
0.8187 	,
0.8418 	,
0.8483 	,
0.8338 	,
0.8394 	,
0.8422 	, ]
    },
    ## wdbc
    "Dataset 8": {
        "GBkNN":     [ 0.9155 	,
0.9174 	,
0.9244 	,
0.9227 	,
0.9244 	,
0.9191 	,
0.9226 	,
0.9174 	, ],
        "ACC-GBkNN": [ 0.9243 	,
0.9174 	,
0.9244 	,
0.9280 	,
0.9227 	,
0.9244 	,
0.9261 	,
0.9280 	, ],
        "ADP-GBkNN": [ 0.9068 	,
0.9120 	,
0.9191 	,
0.9140 	,
0.9122 	,
0.9086 	,
0.9209 	,
0.9192 	, ],
        "GBkNN++"  : [ 0.9208 	,
0.9191 	,
0.9244 	,
0.9280 	,
0.9262 	,
0.9208 	,
0.9385 	,
0.9298 	,],
        "SGBkNN":    [ 0.9314 	,
0.9280 	,
0.9296 	,
0.9333 	,
0.9315 	,
0.9331 	,
0.9350 	,
0.9385 	, ]
    },
    ## balance scale
    "Dataset 9": {
        "GBkNN":     [ 0.7711 	,
0.7936 	,
0.7694 	,
0.7347 	,
0.8030 	,
0.8013 	,
0.7920 	,
0.7793 	,  ],
        "ACC-GBkNN": [ 0.8464 	,
0.8431 	,
0.8257 	,
0.8479 	,
0.8383 	,
0.8415 	,
0.8335 	,
0.8304 	, ],
        "ADP-GBkNN": [ 0.7825 	,
0.7936 	,
0.7698 	,
0.7678 	,
0.7581 	,
0.7775 	,
0.7727 	,
0.7521 	, ],
        "GBkNN++"  : [ 0.8208 	,
0.8351 	,
0.8145 	,
0.8239 	,
0.8322 	,
0.8176 	,
0.8127 	,
0.8290 	,],
        "SGBkNN":    [ 0.8784 	,
0.8880 	,
0.8752 	,
0.8960 	,
0.8769 	,
0.8879 	,
0.8719 	,
0.8816 	, ]
    },

    ##breast ori
    "Dataset 10": {
        "GBkNN":     [ 0.9489 	,
0.9599 	,
0.9532 	,
0.9578 	,
0.9511 	,
0.9577 	,
0.9488 	,
0.9577 	, ],
        "ACC-GBkNN": [ 0.9556 	,
0.9421 	,
0.9399 	,
0.9467 	,
0.9308 	,
0.9443 	,
0.9310 	,
0.9443 	, ],
        "ADP-GBkNN": [ 0.9489 	,
0.9487 	,
0.9443 	,
0.9443 	,
0.9511 	,
0.9422 	,
0.9488 	,
0.9466 	, ],
        "GBkNN++"  : [ 0.9488 	,
0.9377 	,
0.9421 	,
0.9354 	,
0.9533 	,
0.9444 	,
0.9420 	,
0.9397 	,],
        "SGBkNN":    [0.9533 	,
0.9511 	,
0.9465 	,
0.9510 	,
0.9555 	,
0.9488 	,
0.9532 	,
0.9420 	, ]
    },
    ## Pima Indians Diabetes
    "Dataset 11": {
        "GBkNN":     [ 0.7499 	,
0.7383 	,
0.7332 	,
0.7396 	,
0.7252 	,
0.7359 	,
0.7368 	,
0.7347 	,  ],
        "ACC-GBkNN": [ 0.7329 	,
0.7069 	,
0.7018 	,
0.7018 	,
0.6927 	,
0.7384 	,
0.7085 	,
0.7254 	, ],
        "ADP-GBkNN": [0.7070 	,
0.7018 	,
0.7083 	,
0.7136 	,
0.7161 	,
0.7188 	,
0.7044 	,
0.7164 	,],
        "GBkNN++":   [0.7045 	,
0.7135 	,
0.7034 	,
0.7214 	,
0.7317 	,
0.7007 	,
0.7096 	,
0.7098 	, ],
        "SGBkNN":    [0.7538 	,
0.7370 	,
0.7318 	,
0.7475 	,
0.7343 	,
0.7265 	,
0.7460 	,
0.7371 	, ]
    },
   # ## diabetes
   #  "Dataset 11": {
   #      "GBkNN":     [0.7122, 0.6953  , 0.7110  , 0.6862  , 0.6681  , 0.6420  , 0.6224  , 0.5885  , 0.5599  ],
   #      "ACC-GBkNN": [0.6640, 0.6759  , 0.6629  , 0.6497  , 0.6355  , 0.5926  , 0.5782  , 0.5378  , 0.5104  ],
   #      "ADP-GBkNN": [0.6953, 0.6602  , 0.6524  , 0.6198  , 0.6303  , 0.5990  , 0.6053 ,  0.5390  , 0.5509  ],
   #      "SGBkNN":    [0.7161, 0.7163  , 0.7189  , 0.7058  , 0.6733  , 0.6563  , 0.6576  , 0.6225  , 0.5780  ]
   #  },

    ## fourglass
    "Dataset 12": {
        "GBkNN":     [ 0.9779 	,
0.9756 	,
0.9837 	,
0.9768 	,
0.9838 	,
0.9838 	,
0.9803 	,
0.9849 	, ],
        "ACC-GBkNN": [ 0.9861 	,
0.9838 	,
0.9884 	,
0.9965 	,
0.9930 	,
0.9919 	,
0.9861 	,
0.9942 	,  ],
        "ADP-GBkNN": [ 0.9930 	,
0.9942 	,
0.9919 	,
0.9837 	,
0.9930 	,
0.9919 	,
0.9954 	,
0.9709 	,  ],
        "GBkNN++":   [ 0.9919 	,
0.9872 	,
0.9919 	,
0.9872 	,
0.9884 	,
0.9850 	,
0.9919 	,
0.9907 	, ],
        "SGBkNN":    [ 0.9965 	,
0.9953 	,
0.9953 	,
1.0000 	,
0.9988 	,
0.9977 	,
0.9977 	,
0.9988 	,  ]
    },
    ## biodeg
    "Dataset 13": {
        "GBkNN":     [ 0.8270 	,
0.8099 	,
0.8185 	,
0.8184 	,
0.8280 	,
0.8127 	,
0.8108 	,
0.8184 	,],
        "ACC-GBkNN": [ 0.8165 	,
0.8147 	,
0.8175 	,
0.8042 	,
0.8061 	,
0.7956 	,
0.8060 	,
0.8032 	, ],
        "ADP-GBkNN": [ 0.7927 	,
0.7928 	,
0.7918 	,
0.7927 	,
0.7985 	,
0.7871 	,
0.7966 	,
0.7937 	, ],
        "GBkNN++":   [ 0.8146 	,
0.8137 	,
0.8032 	,
0.8099 	,
0.8118 	,
0.7975 	,
0.8061 	,
0.8022 	,],
        "SGBkNN":    [ 0.8203 	,
0.8175 	,
0.8156 	,
0.8166 	,
0.8147 	,
0.8108 	,
0.8118 	,
0.8098 	, ]
    },
    ## data banknote
    "Dataset 14": {
        "GBkNN":     [ 0.9948 	,
0.9941 	,
0.9933 	,
0.9956 	,
0.9978 	,
0.9904 	,
0.9948 	,
0.9956 	,  ],
        "ACC-GBkNN": [ 0.9933 	,
0.9874 	,
0.9911 	,
0.9896 	,
0.9829 	,
0.9918 	,
0.9807 	,
0.9918 	, ],
        "ADP-GBkNN": [ 0.9985 	,
0.9963 	,
0.9963 	,
0.9970 	,
0.9970 	,
0.9985 	,
0.9963 	,
0.9970 	,  ],
        "GBkNN++":   [ 0.9970 	,
0.9941 	,
0.9963 	,
0.9963 	,
0.9948 	,
0.9918 	,
0.9918 	,
0.9948 	,],
        "SGBkNN":    [ 0.9985 	,
0.9985 	,
0.9978 	,
0.9985 	,
0.9985 	,
0.9978 	,
0.9993 	,
0.9985 	, ]
    },
#     #cardio
#
#     "Dataset 15": {
#         "GBkNN":     [0.9808, 0.9835 	,
# 0.9797 	,
# 0.9824 	,
# 0.9791 	,
# 0.9791 	,
# 0.9824 	,
# 0.9824 	,
# 0.9813 	,   ],
#         "ACC-GBkNN": [0.9627, 0.9638 	,
# 0.9621 	,
# 0.9693 	,
# 0.9517 	,
# 0.9687 	,
# 0.9600 	,
# 0.9588 	,
# 0.9605 	,  ],
#         "ADP-GBkNN": [0.9819, 0.9846 	,
# 0.9868 	,
# 0.9852 	,
# 0.9863 	,
# 0.9830 	,
# 0.9846 	,
# 0.9852 	,
# 0.9857 	,   ],
#         "GBkNN++":   [0.9754, 0.9737 	,
# 0.9720 	,
# 0.9786 	,
# 0.9742 	,
# 0.9742 	,
# 0.9753 	,
# 0.9759 	,
# 0.9759 	,],
#         "SGBkNN":    [0.9819, 0.9791 	,
# 0.9830 	,
# 0.9819 	,
# 0.9791 	,
# 0.9802 	,
# 0.9835 	,
# 0.9808 	,
# 0.9841 	,   ]
#     },

#
   "Dataset 15": {
        "GBkNN":     [ 0.9808 	,
0.9802 	,
0.9830 	,
0.9841 	,
0.9797 	,
0.9813 	,
0.9841 	,
0.9852 	, ],
        "ACC-GBkNN": [ 0.9643 	,
0.9665 	,
0.9610 	,
0.9638 	,
0.9676 	,
0.9539 	,
0.9588 	,
0.9660 	,  ],
        "ADP-GBkNN": [ 0.9863 	,
0.9874 	,
0.9841 	,
0.9852 	,
0.9819 	,
0.9863 	,
0.9841 	,
0.9852 	, ],
        "GBkNN++":   [ 0.9759 	,
0.9802 	,
0.9731 	,
0.9759 	,
0.9753 	,
0.9759 	,
0.9791 	,
0.9753 	,],
        "SGBkNN":    [ 0.9802 	,
0.9808 	,
0.9786 	,
0.9819 	,
0.9835 	,
0.9819 	,
0.9813 	,
0.9819 	, ]
    },


    # thyroid
    "Dataset 16": {
        "GBkNN":     [ 0.9746 	,
0.9746 	,
0.9746 	,
0.9746 	,
0.9746 	,
0.9746 	,
0.9746 	,
0.9746 	, ],
        "ACC-GBkNN": [ 0.9746 	,
0.9746 	,
0.9746 	,
0.9746 	,
0.9746 	,
0.9746 	,
0.9746 	,
0.9746 	, ],
        "ADP-GBkNN": [ 0.9891 	,
0.9860 	,
0.9893 	,
0.9880 	,
0.9885 	,
0.9882 	,
0.9880 	,
0.9860 	, ],
        "GBkNN++":   [ 0.9852 	,
0.9863 	,
0.9860 	,
0.9855 	,
0.9852 	,
0.9858 	,
0.9863 	,
0.9858 	, ],
        "SGBkNN":    [0.9893 	,
0.9877 	,
0.9888 	,
0.9904 	,
0.9888 	,
0.9882 	,
0.9882 	,
0.9885 	, ]
    },
    ## rice
    "Dataset 17": {
        "GBkNN":     [0.9100 	,
0.9110 	,
0.9155 	,
0.9131 	,
0.9123 	,
0.9129 	,
0.9134 	,
0.9134 	, ],
        "ACC-GBkNN": [	0.9144 	,
0.9165 	,
0.9210 	,
0.9150 	,
0.9178 	,
0.9131 	,
0.9152 	,
0.9176 	, ],
        "ADP-GBkNN": [ 0.8921 	,
0.8900 	,
0.8958 	,
0.8916 	,
0.8843 	,
0.8913 	,
0.8906 	,
0.8900 	, ],
        "GBkNN++":   [ 0.9094 	,
0.9084 	,
0.9079 	,
0.9129 	,
0.9058 	,
0.9058 	,
0.9089 	,
0.9084 	,],
        "SGBkNN":    [ 0.9228 	,
0.9218 	,
0.9247 	,
0.9223 	,
0.9186 	,
0.9234 	,
0.9257 	,
0.9257 	,]
    },
    # waveform
    "Dataset 18": {
        "GBkNN":     [ 0.8312	,
0.823	,
0.804	,
0.8172	,
0.7984	,
0.802	,
0.8392	,
0.826	, ],
        "ACC-GBkNN": [ 0.809	,
0.8114	,
0.8072	,
0.8056	,
0.813	,
0.807	,
0.8086	,
0.8036	, ],
        "ADP-GBkNN": [ 0.7754	,
0.7734	,
0.7664	,
0.7702	,
0.7648	,
0.7746	,
0.7772	,
0.7702	, ],
        "GBkNN++":   [ 0.7926	,
0.7988	,
0.7824	,
0.7954	,
0.785	,
0.7898	,
0.788	,
0.799	, ],
        "SGBkNN":    [ 0.8358	,
0.8328	,
0.8274	,
0.8328	,
0.8334	,
0.8342	,
0.8316	,
0.8326	, ]
    },

    # page blocks
    "Dataset 19": {
        "GBkNN":     [ 0.9064 	,
0.9104 	,
0.9023 	,
0.9090 	,
0.8670 	,
0.8954 	,
0.9028 	,
0.9008 	, ],
        "ACC-GBkNN": [ 0.9503 	,
0.9507 	,
0.9488 	,
0.9483 	,
0.9488 	,
0.9470 	,
0.9499 	,
0.9494 	, ],
        "ADP-GBkNN": [ 0.9590 	,
0.9629 	,
0.9583 	,
0.9603 	,
0.9587 	,
0.9588 	,
0.9603 	,
0.9583 	, ],
        "GBkNN++":   [ 0.9510 	,
0.9538 	,
0.9520 	,
0.9525 	,
0.9516 	,
0.9503 	,
0.9533 	,
0.9510 	, ],
        "SGBkNN":    [ 0.9577 	,
0.9559 	,
0.9579 	,
0.9590 	,
0.9561 	,
0.9581 	,
0.9579 	,
0.9561 	,]
    },
    "Dataset 20": {
        "GBkNN": [0.757	,
0.778	,
0.7610 	,
0.7750 	,
0.7740 	,
0.7830 	,
0.7890 	,
0.7590 	,],
        "ACC-GBkNN": [ 0.737	,
0.766	,
0.754	,
0.75	,
0.767	,
0.755	,
0.768	,
0.745	,],
        "ADP-GBkNN": [ 0.756	,
0.743	,
0.74	,
0.764	,
0.741	,
0.746	,
0.758	,
0.749	,],
        "GBkNN++":   [0.7400 	,
0.7160 	,
0.7007 	,
0.6737 	,
0.6417 	,
0.6175 	,
0.5801 	,
0.5578 	,	],
        "SGBkNN": [0.772	,
0.776	,
0.762	,
0.777	,
0.786	,
0.776	,
0.792	,
0.765	,]
    },
}





# Define noise rates and datasets (omitting noise rate 0)
noise_rates = [0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4]
dataset_numbers = list(range(1, 21))  # Use numbers 1 to 20 instead of dataset names
models = ["GBkNN", "ACC-GBkNN", "ADP-GBkNN", "GBkNN++", "SGBkNN"]

ranks_list = []

# Calculate reversed ranks for each dataset and noise rate
for noise_index in range(0, 8):  # Start from 0.05 noise rate to 0.4 (8 levels)
    ranks_for_noise = []
    for dataset, model_acc in accuracies.items():
        acc_for_noise = [model_acc[model][noise_index] for model in models]
        ranks = np.argsort(np.argsort(acc_for_noise)) + 1  # Current rank
        reversed_ranks = 6 - ranks  # Reverse the ranks
        ranks_for_noise.append(reversed_ranks)
    ranks_list.append(np.array(ranks_for_noise).T)  # Transpose for heatmap plotting

# Plot heatmaps for each noise rate in a 4x2 grid
fig, axes = plt.subplots(4, 2, figsize=(20, 12))  # 4x2 grid for 8 noise levels
noise_titles = ["(a) Feature noise rate 5%", "(b) Feature noise rate 10%", "(c) Feature noise rate 15%", "(d) Feature noise rate 20%",
                "(e) Feature noise rate 25%", "(f) Feature noise rate 30%", "(g) Feature noise rate 35%", "(h) Feature noise rate 40%"]

# Define font sizes for different elements
label_fontsize = 18
tick_fontsize = 15
annot_fontsize = 15
model_fontsize = 18  # Font size for yticklabels (model names)
colorbar_fontsize = 18
noise_rate_fontsize = 20

for i, ax in enumerate(axes.flat):
    # Use reversed_ranks as the values to match the color intensity
    heatmap = sns.heatmap(
        ranks_list[i], annot=True, fmt="d", cmap="Blues_r", cbar=True, ax=ax,
        xticklabels=dataset_numbers, yticklabels=models,
        cbar_kws={'label': 'Rank', 'ticks': [1, 2, 3, 4,5], 'shrink': 0.7, 'fraction': 0.05, 'pad': 0.05},
        vmin=1, vmax=4, linewidths=1, linecolor='white', square=True,
        annot_kws={'size': annot_fontsize}  # Set font size for cell annotations
    )

    # Set color bar ticks to only four levels and adjust font size
    colorbar = heatmap.collections[0].colorbar
    colorbar.ax.tick_params(labelsize=tick_fontsize)  # Color bar tick font size
    colorbar.set_label('Rank', fontsize=colorbar_fontsize)  # Color bar label font size

    # Set the custom text for noise rate below each heatmap
    ax.text(0.5, -0.3, noise_titles[i], ha='center', va='top',
            transform=ax.transAxes, fontsize=noise_rate_fontsize)

    # Set label font sizes and remove default xlabel
    #ax.set_xlabel("Datasets", fontsize=18)
    #ax.set_ylabel("Classifiers", fontsize=20)

    # Adjust tick parameters for x and y axes
    ax.tick_params(axis='x', labelsize=tick_fontsize)  # X-axis tick font size
    ax.tick_params(axis='y', labelsize=tick_fontsize, rotation=0)  # Y-axis tick font size and horizontal labels

# Adjust layout for a cleaner look
plt.subplots_adjust(wspace=0.2, hspace=0.5, top=0.97, bottom=0.1, left = 0.07, right=0.98)
plt.savefig('rank_heatmap_feature_noise.png', dpi=300)
plt.show()